[agent]
  interval = "1000ms"
  round_interval = false

  metric_batch_size = 1000
  metric_buffer_limit = 100000
  collection_jitter = "0s"
  flush_interval = "250ms"
  flush_jitter = "0s"
  precision = ""

  debug = false
  quiet = true
  logfile = ""

  hostname = ""
  omit_hostname = true

[[inputs.procstat_boost]]
 #Make sure you've mounted into cointainer fs and pass env. vars for pointing out /proc, /etc and so on.:
 #  HOST_ETC => /hostfs/etc
 #  HOST_PROC => /hostfs/proc
 #  HOST_SYS => /hostfs/sys
 #  HOST_MOUNT_PREFIX => /hostfs
 interval = "15s" #proc statistics is very expensive. Need to limit system calls
 limit_metrics = true # minimize the system calls amount to reduce CPU load

 update_process_tags = false #do not update process tags during each gather to reduce CPU load

 pid_finder = "native"
 exe = ".*"
 #add_data = ["^containerd$;inclusive;inverse"] # Getting statistics about all processes in the system except running containers (they are covered by inputs.docker)
 tagexclude = ["process_cmdline","pidfile","exe","pattern","add_data","user","systemd_unit","cgroup","win_service","container_id","container_name","namespace","environment","pod_name","source"]
 fieldpass = ["*memory_rss","*cpu_usage","*pid_count"]
 pid_tag = true

[[outputs.file]]
  files = ["stdout"]
  data_format = "influx"