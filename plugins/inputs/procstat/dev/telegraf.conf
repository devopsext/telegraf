[global_tags]
  #Orchestration - sourced from 'COLLECTOR_GLOBAL_TAGS_ORCHESTRATION' env. var
  # or detected using following logic:
  # - for Docker - 'DockerOnly'
  # - for Rancher - 'rancher.test.env', or 'rancher.prod.env' - variable that sourced from 'RANCHER_HOST' env var.
  # - for k8s - ${ORCHESTRATION}.{NODE_DOMAIN}, like k8s.test.env, or aws-eks.eu-central.local
  orchestration = "Rancher"
  #Instance path
  # Rancher: Environment.stack.service.instance
  # K8S: namespace.pod_name(constant part).container_name
  # Docker: - not set
  location = "Logs.system.collector.system-collector-x"

  source = "collector"
  type = "metrics"
  version = "2.0"

  collector_version="1.9.3.11"
  collector_type="HOST"
  environment = "Logs"
  container_id = "dd0b105c369e25f00d0b340d347b427b48c3e5e1e9f26973f36733477a9a5e6d"

[agent]
  interval="15s"
  flush_interval="15s"
  quiet = false
  debug = true

  hostname = "logs-03.test.env"
  omit_hostname = false

[[inputs.procstat]]
  #pid_finder = "parent"
  #add_data = ["926;inclusive;inverse","1;exclusive","31;exclusive;inverse"]
  #add_data = ["Docker$;inclusive;inverse"]
  pid_finder = "native"
  exe = ".*"
  limit_metrics = true # minimize the system calls amount to reduce CPU load
  update_process_tags = false #do not update process tags during each gather to reduce CPU load

  #add_data = ["^containerd$;inclusive;inverse"] # Getting statistics about all processes in the system except running containers (they are covered by inputs.docker)
  tagexclude = ["process_cmdline","pidfile","exe","pattern","add_data","user","systemd_unit","cgroup","win_service","container_id","container_name","namespace","environment","pod_name","source"]
  fieldpass = ["*memory_rss","*cpu_usage","*pid_count"]
  pid_tag = true

[[outputs.file]]
  files = ["stdout"]
  data_format = "influx"

[[outputs.prometheus_client]]
 expiration_interval = "20s"
 listen = "0.0.0.0:60000"
 path = "/metrics"
 namedrop = ["tail"]
 collectors_exclude = ["gocollector", "process"]